/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        cmd {
            bindings = <&kp LCMD>;
            key-positions = <37 38>;
        };

        alt {
            bindings = <&kp LPAR>;
            key-positions = <16 17>;
        };

        rpar {
            bindings = <&kp RPAR>;
            key-positions = <19 18>;
        };

        lbkt {
            bindings = <&kp LBKT>;
            key-positions = <4 5>;
        };

        rbkt {
            bindings = <&kp RBKT>;
            key-positions = <6 7>;
        };

        lbrc {
            bindings = <&kp LBRC>;
            key-positions = <28 29>;
        };

        rbrc {
            bindings = <&kp RBRC>;
            key-positions = <30 31>;
        };
    };

    macros {
        zed_em_kay: zed_em_kay {
            compatible = "zmk,behavior-macro";
            label = "ZM_zed_em_kay";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp Z &kp M &kp K>,
                <&macro_release>,
                <&kp LSHFT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
   &kp TAB   &kp Q   &kp W     &kp E      &kp R      &kp T            &kp Y           &kp U      &kp I    &kp O     &kp P  &kp BSLH
   &kp ESC   &kp A   &kp S     &kp D      &kp F      &kp G            &kp H           &kp J      &kp K    &kp L  &kp SEMI   &kp SQT
 &kp LSHFT   &kp Z   &kp X     &kp C      &kp V      &kp B            &kp N           &kp M  &kp COMMA  &kp DOT  &kp FSLH   &kp DEL
                            &kp LGUI  &kp SPACE  &kp SPACE          &kp RET  &mt LSHIFT RET   &kp RALT
            >;
        };

        raise {
            bindings = <
     &trans        &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
 &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4          &trans  &trans  &trans  &trans  &trans  &trans
     &trans        &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                               &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };

        lower {
            bindings = <
 &trans  &kp EXCL  &kp AT                        &kp HASH                          &kp DLLR                         &kp PRCNT          &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR     &trans
 &trans    &trans  &trans                          &trans                            &trans                            &trans          &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
 &trans    &trans  &trans                          &trans                            &trans                            &trans          &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                           &rgb_ug RGB_COLOR_HSB(0,50,56)  &rgb_ug RGB_COLOR_HSB(104,57,55)  &rgb_ug RGB_COLOR_HSB(209,50,55)             &trans     &trans           &trans
            >;
        };

        adj {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
                         &trans  &trans  &trans          &trans  &trans  &trans
            >;
        };
    };
};
